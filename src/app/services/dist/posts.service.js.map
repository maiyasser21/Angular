{"version":3,"sources":["posts.service.ts"],"names":[],"mappings":";;;;;;;;AACA,sCAA2C;AAC3C,6BAA0D;AAM1D;IAGE,sBAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAFnC,SAAI,GAAU,4CAA4C,CAAC;IAEpB,CAAC;IAExC,+BAAQ,GAAR;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAC3C,iBAAU,CAAC,UAAC,GAAG;YACb,OAAO,iBAAU,CAAC,cAAI,OAAA,GAAG,CAAC,OAAO,IAAE,cAAc,EAA3B,CAA2B,CAAC,CAAC;QACrD,CAAC,CAAC,CACH,CAAA;IACH,CAAC;IAXU,YAAY;QAHxB,iBAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,YAAY,CAYxB;IAAD,mBAAC;CAZD,AAYC,IAAA;AAZY,oCAAY","file":"posts.service.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { IPost } from '../Shared Classes and types/IPost';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n  _url:string = 'https://jsonplaceholder.typicode.com/posts';\n\n  constructor(private http:HttpClient) { }\n\n  getPosts():Observable<IPost[]>{\n    return this.http.get<IPost[]>(this._url).pipe(\n      catchError((err)=>{\n        return throwError(()=>err.message||\"Server Error\");\n      })\n    )\n  }\n}\n\n"]}