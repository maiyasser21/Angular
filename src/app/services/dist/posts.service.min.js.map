{"version":3,"sources":["posts.service.ts"],"names":["core_1","require","rxjs_1","PostsService","http","this","_url","prototype","getPosts","get","pipe","catchError","err","throwError","message","__decorate","Injectable","providedIn","exports"],"mappings":"6YACA,IAAAA,OAAAC,QAAA,iBACAC,OAAAD,QAAA,QAMAE,aAAA,WAGE,SAAAA,EAAoBC,GAAAC,KAAAD,KAAAA,EAFpBC,KAAAC,KAAc,6CAWhB,OAPEH,EAAAI,UAAAC,SAAA,WACE,OAAOH,KAAKD,KAAKK,IAAaJ,KAAKC,MAAMI,KACvCR,OAAAS,WAAW,SAACC,GACV,OAAOV,OAAAW,WAAW,WAAI,OAAAD,EAAIE,SAAS,qBAR9BX,EAAYY,WAAA,CAHxBf,OAAAgB,WAAW,CACVC,WAAY,UAEDd,GAAb,GAAae,QAAAf,aAAAA","file":"posts.service.min.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { IPost } from '../Shared Classes and types/IPost';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n  _url:string = 'https://jsonplaceholder.typicode.com/posts';\n\n  constructor(private http:HttpClient) { }\n\n  getPosts():Observable<IPost[]>{\n    return this.http.get<IPost[]>(this._url).pipe(\n      catchError((err)=>{\n        return throwError(()=>err.message||\"Server Error\");\n      })\n    )\n  }\n}\n\n"]}