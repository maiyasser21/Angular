{"version":3,"sources":["product-service.service.ts"],"names":["core_1","require","rxjs_1","ProductServiceService","http","this","_url","prototype","getAllProducts","get","pipe","catchError","err","Error","message","getProductById","prdId","id","parseInt","isNaN","of","__decorate","Injectable","providedIn","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAEAC,OAAAD,QAAA,QAOAE,sBAAA,WAGE,SAAAA,EAAoBC,GAAAC,KAAAD,KAAAA,EADpBC,KAAAC,KAAe,0BAwBjB,OArBAH,EAAAI,UAAAC,eAAA,WACE,OAAOH,KAAKD,KAAKK,IAAgBJ,KAAKC,MAAMI,KAC1CR,OAAAS,WAAW,SAACC,GACV,MAAM,IAAIC,MAAMD,EAAIE,SAAW,6BAKrCX,EAAAI,UAAAQ,eAAA,SAAeC,GACb,IAAMC,EAAKC,SAASF,EAAO,IAC3B,OAAIG,MAAMF,GACDf,OAAAkB,GAAG,MAGLf,KAAKD,KAAKK,IAAiBJ,KAAKC,KAAI,IAAIW,GAAMP,KACnDR,OAAAS,WAAW,SAACC,GACV,MAAM,IAAIC,MAAMD,EAAIE,SAAW,6BArBxBX,EAAqBkB,WAAA,CAHjCrB,OAAAsB,WAAW,CACVC,WAAY,UAEDpB,GAAb,GAAaqB,QAAArB,sBAAAA","file":"product-service.service.min.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { IProduct } from '../Shared Classes and types/IProduct';\nimport { Observable, catchError, map, of, throwError } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductServiceService {\n\n  _url: string = '../assets/products.json';\n  constructor(private http: HttpClient) {}\n\ngetAllProducts(): Observable<IProduct[]> {\n  return this.http.get<IProduct[]>(this._url).pipe(\n    catchError((err) => {\n      throw new Error(err.message || 'Internal Server Error');\n    })\n  );\n}\n\ngetProductById(prdId: string): Observable<IProduct | null> {\n  const id = parseInt(prdId, 10);\n  if (isNaN(id)) {\n    return of(null);\n  }\n\n  return this.http.get<IProduct>(`${this._url}/${id}`).pipe(\n    catchError((err) => {\n      throw new Error(err.message || 'Internal Server Error');\n    })\n  );\n}\n\n}\n\n"]}