{"version":3,"sources":["user.service.ts"],"names":[],"mappings":";;;;;;;;AACA,sCAA2C;AAC3C,6BAA0D;AAO1D;IAGE,qBAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAFnC,SAAI,GAAU,4CAA4C,CAAC;IAEpB,CAAC;IAExC,8BAAQ,GAAR;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAC5C,iBAAU,CACR,UAAC,GAAG;YAEH,OAAO,iBAAU,CAAC,cAAI,OAAA,GAAG,CAAC,OAAO,IAAE,cAAc,EAA3B,CAA2B,CAAC,CAAC;QAErD,CAAC,CAAC,CACH,CAAA;IACH,CAAC;IAAA,CAAC;IAdS,WAAW;QAHvB,iBAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,WAAW,CAiBvB;IAAD,kBAAC;CAjBD,AAiBC,IAAA;AAjBY,kCAAW","file":"user.service.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { IUser } from '../Shared Classes and types/IUser';\nimport { error } from 'jquery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  _url:string = 'https://jsonplaceholder.typicode.com/users';\n\n  constructor(private http:HttpClient) { }\n\n  getUsers():Observable<IUser[]>{\n    return this.http.get<IUser[]>(this._url).pipe\n    (catchError\n      ((err)=>\n      {\n        return throwError(()=>err.message||\"Server Error\");\n\n      })\n    )\n  };\n\n\n}\n"]}