{"version":3,"sources":["user.service.ts"],"names":["core_1","require","rxjs_1","UserService","http","this","_url","prototype","getUsers","get","pipe","catchError","err","throwError","message","__decorate","Injectable","providedIn","exports"],"mappings":"6YACA,IAAAA,OAAAC,QAAA,iBACAC,OAAAD,QAAA,QAOAE,YAAA,WAGE,SAAAA,EAAoBC,GAAAC,KAAAD,KAAAA,EAFpBC,KAAAC,KAAc,6CAgBhB,OAZEH,EAAAI,UAAAC,SAAA,WACE,OAAOH,KAAKD,KAAKK,IAAaJ,KAAKC,MAAMI,KACxCR,OAAAS,WACE,SAACC,GAEA,OAAOV,OAAAW,WAAW,WAAI,OAAAD,EAAIE,SAAS,qBAV9BX,EAAWY,WAAA,CAHvBf,OAAAgB,WAAW,CACVC,WAAY,UAEDd,GAAb,GAAae,QAAAf,YAAAA","file":"user.service.min.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { IUser } from '../Shared Classes and types/IUser';\nimport { error } from 'jquery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  _url:string = 'https://jsonplaceholder.typicode.com/users';\n\n  constructor(private http:HttpClient) { }\n\n  getUsers():Observable<IUser[]>{\n    return this.http.get<IUser[]>(this._url).pipe\n    (catchError\n      ((err)=>\n      {\n        return throwError(()=>err.message||\"Server Error\");\n\n      })\n    )\n  };\n\n\n}\n"]}